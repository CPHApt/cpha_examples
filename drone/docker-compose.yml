version: "3.8"
networks:
  drone_external:
    external:
      name: drone_external
  drone_internal:
    external:
      name: drone_internal
services:
  drone:
    image: drone/drone:${VERSION_DRONE:-latest}
    container_name: drone
    networks:
      - drone_external
      - drone_internal
    privileged: true
    volumes:
      - ${VOLUME_DRONE:-/docker/drone}:/data
      - ${DOCKERSOCKET:-/var/run/docker.sock}:/var/run/docker.sock
    restart: ${RST_DRONE:-unless-stopped}
    environment:
      - TZ=${TZ:-Europe/Lisbon}
      - ${DRONE_GIT_SERVER}=${GIT_SERVER:-github}
      - ${DRONE_GIT_CLIENT_ID}=${GIT_CLIENT_ID}
      - ${DRONE_GIT_CLIENT_SECRET}=${GIT_CLIENT_SECRET}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET:-uUcUC5jt6CUvBZDxtzFTEkymC4p2FuV4}
      - DRONE_SERVER_HOST=${DRONE_SERVER_HOST:-latest}
      - DRONE_SERVER_PROTO=${DRONE_SERVER_PROTO:-latest}
      - DRONE_GIT_ALWAYS_AUTH=true
      - DRONE_TLS_AUTOCERT=false
      - DRONE_RUNNER_CAPACITY=5
      - DRONE_USER_CREATE=username:${DRONE_USER_CREATE:-drone},admin:true
      - DRONE_AGENTS_ENABLED=true
      - DRONE_REGISTRATION_CLOSED=true
  drone_runner:
    image: drone/drone-runner-docker:${VERSION_RUNNER:-latest}
    container_name: drone_runner
    networks:
      - drone_internal
    privileged: true
    restart: ${RST_RUNNER:-unless-stopped}
    volumes:
      - ${DOCKERSOCKET:-latest}:/var/run/docker.sock
    environment:
      - DRONE_RPC_HOST=drone
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET:-uUcUC5jt6CUvBZDxtzFTEkymC4p2FuV4}
      - DRONE_RUNNER_CAPACITY=5
    depends_on:
      - drone
